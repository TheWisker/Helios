# <===========================================>

#   ██████╗ ████████╗██████╗ ██████╗ ██╗  ██╗
#   ██╔══██╗╚══██╔══╝██╔══██╗██╔══██╗██║ ██╔╝
#   ██████╔╝   ██║   ██████╔╝██████╔╝█████╔╝
#   ██╔══██╗   ██║   ██╔══██╗██╔══██╗██╔═██╗
#   ██████╔╝   ██║   ██║  ██║██████╔╝██║  ██╗
#   ╚═════╝    ╚═╝   ╚═╝  ╚═╝╚═════╝ ╚═╝  ╚═╝

# <===========================================>
#              @Author: TheWisker
# <===========================================>
#              See man btrbk.conf
# <===========================================>
#  Basic Options:
# <===========================================>
# Format used as postfix for snapshot names
timestamp_format long
# Condition for creating snapshots
snapshot_create onchange
# Use incremental backup mode
incremental yes
# <===========================================>
#  Retention Policies:
# <===========================================>
# On what day a snapshot is considered to be weekly
preserve_day_of_week sunday
# On what hour a snapshot is considered to be dayly
preserve_hour_of_day 0
# <===========================================>
#  Local Retention:
# <===========================================>
# Retention policy for local snapshots based on time category or no to only use snapshot_preserve_min
snapshot_preserve 24h 5d 2w 1m 0y
# Minimum amount of time to preserve all local snapshots
snapshot_preserve_min 24h
# <===========================================>
#  Target Retention:
# <===========================================>
# Retention policy for target snapshots based on time category or no to only use target_preserve_min
target_preserve 72h 14d 6w 4m 2y
# Minimum amount of time to preserve all target snapshots
target_preserve_min 72h
# <===========================================>
#  Archive Retention:
# <===========================================>
# Retention policy for archive snapshots based on time category or no to only use archive_preserve_min
archive_preserve no
# Minimum amount of time to preserve all archive snapshots
archive_preserve_min all
# Exclude subvolumes matching pattern from archiving
#archive_exclude pattern
# <===========================================>
#  Data Stream:
# <===========================================>
# Compress the btrfs send stream before transferring it from/to remote locations
stream_compress no # As btrfs itself has compression capabilities we disable this to now waste processing power
stream_compress_level default
# Zstd specific option
stream_compress_long default
# Pigz, pbzip2, bzip3 and zstd specific option
stream_compress_threads default
# Zstd specific option
stream_compress_adapt default
# Use a buffer with the btrfs send stream in the local side
stream_buffer no
# Use a buffer with the btrfs send stream in the remote side
stream_buffer_remote no
# Limit the read rate of the btrfs send stream to <rate> bytes per second
rate_limit no
# Limit the write rate of the btrfs send stream to <rate> bytes per second
rate_limit_remote no
# <===========================================>
#  System Options:
# <===========================================>
# Log all transactions to file
transaction_log /var/log/btrbk.log
# Log all transactions trough syslog in <facility>
transaction_syslog daemon
# Create lockfile <file> on startup
lockfile /var/tmp/btrbk.lck
# Backend filesystem utilities to be used for btrfs specific operations
backend btrfs-progs
# Cache extent maps for the "btrbk extents" command
cache_dir /tmp/btrbk
# <===========================================>
#  Btrfs Options:
# <===========================================>
# Specify the preferences to determine the best common (correlated) parent and clone sources for incremental backups, by choosing from predefined candidate lists
incremental_prefs sro:1 srn:1 sao:1 san:1 aro:1 arn:1
# Add "-c <clone-src>" to the btrfs-send(8) command for all correlated subvolumes resolved by incremental_prefs
incremental_clones yes
# Specifies where to search for the best common parent for incremental backup
incremental_resolve mountpoint
# Wait for the transaction commit at the end of each snapshot or backup deletion
btrfs_commit_delete no
# Use btrfs send protocol version N
send_protocol 2
# Send data that is compressed on the filesystem directly without decompressing it (yes implies send_protocol 2)
send_compressed_data yes
# <===========================================>
#  Backup Structure:
# <===========================================>
# Volume to manage backups for
volume /
    # Subvolume to backup
    subvolume .
        # Base name of the snapshot
        snapshot_name system
        # Group for filtering most btrbk commands
        group joy system
    # Subvolume to backup
    subvolume root
        # Base name of the snapshot
        snapshot_name root
        # Group for filtering most btrbk commands
        group joy root
    # Subvolume to backup
    subvolume home
        # Base name of the snapshot
        snapshot_name home
        # Group for filtering most btrbk commands
        group joy home
    # Subvolume to backup
    subvolume media/shr
        # Base name of the snapshot
        snapshot_name share
        # Group for filtering most btrbk commands
        group joy share
    # Directory for local snapshots
    snapshot_dir var/snap
    # Target to backup to
    target send-receive var/bak

